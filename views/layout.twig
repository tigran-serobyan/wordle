{# <!DOCTYPE html>
<html>
  <head>
    <title>{{ title }}</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <style>
    @font-face{font-family:WorkSans;src:url(WorkSans.ttf)}@font-face{font-family:DejaVu;src:url(DejaVu.ttf)}*{font-family:WorkSans,DejaVu,Arial,sans;touch-action:manipulation}nav{position:absolute;top:0;left:0;right:0;border-bottom:1px solid #222;display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:center;align-items:center}h1{color:white;text-align:center;font-size:4.5vh;margin:.5vh .5vh 1vh;letter-spacing:3px;font-family:sans-serif}h1::after{content:"ԱՐԵՒԵԼԱՀԱՅԵՐԵՆ";position:absolute;top:5.55vh;margin-left:-12.7vh;font-size:1vh;letter-spacing:.2vh;color:#6ab365}body{padding:50px;font:14px "Lucida Grande",Helvetica,Arial,sans-serif;background:#6aaa64;margin:0;touch-action:manipulation}main{position:absolute;left:0;right:0;top:0;bottom:0;background:#121213}.keyboard{width:min(100vw, 55vh);position:absolute;bottom:0;left:calc((100vw - min(100vw, 55vh))/2)}.keyboardRow{width:100%;height:6vh;margin-bottom:.5vh;text-align:center;display:flex;flex-wrap:nowrap;justify-content:space-evenly;align-items:center}.letter,.button{height:6vh;background:#575a5a;border:none;color:white;font-size:calc(min(100vw, 50vh)/33);text-align:center;box-sizing:border-box;border-radius:5px;font-weight:800}.letter{width:8%;padding:0}.keyboardRow:nth-of-type(3) .letter{width:9%}.keyboardRow:nth-of-type(4) .letter{width:8.5%}.button{width:17%;background:#393a3a}.backspace{width:13%;padding:0}.backspace::after{content:"ՀԵՏ";position:absolute;transform:translate(-50%, -50%)}.guesses{position:absolute;bottom:30vh;top:13vh;left:5vw;right:5vw}#doubleLetter{display:none;position:absolute;top:-45px;right:calc(89.6vw / 2 - calc(55vh / 7 -  0.1vh) * 2.5);text-align:center;color:white;background:#c0a427;padding:4px 10px 4px 20px;border-radius:20px;width:max-content;font-size:12px;animation:shake .5s linear 1s 1}#doubleLetter::before{content:'*';position:absolute;font-size:30px;left:7px;top:-0.5px;font-family:sans-serif}.guessRow{height:calc(57vh / 7 - 0.1vh);width:89.6vw;text-align:center;display:flex;justify-content:center}.guessLetter{display:inline-block;width:calc(57vh / 7 - 0.5vh);height:calc(57vh / 7 - 0.5vh);margin:.1vh .25vh;background:#121213;border:solid 2px #3f4141;box-sizing:border-box;color:white;font-size:calc(29vh / 7 - 0.5vh);font-weight:900;padding:1.5vh 0;text-align:center;transform-style:preserve-3d;animation-duration:.6s;animation-timing-function:ease-in-out}.guessLetter.wrong{animation-name:flipWrong}.guessLetter.hit{animation-name:flipHit}.guessLetter.right{animation-name:flipRight}@keyframes flipWrong{0%{background:#121213;border-color:#3f4141;transform:rotateX(0deg)}49%{background:#121213;border-color:#3f4141}50%{background:#242525;border-color:#242525;transform:rotateX(90deg)}100%{transform:rotateX(0deg);background:#242525;border-color:#242525}}@keyframes flipHit{0%{background:#121213;border-color:#3f4141;transform:rotateX(0deg)}49%{background:#121213;border-color:#3f4141}50%{background:#c0a427;border-color:#c0a427;transform:rotateX(90deg)}100%{transform:rotateX(0deg);background:#c0a427;border-color:#c0a427}}@keyframes flipRight{0%{background:#121213;border-color:#3f4141;transform:rotateX(0deg)}49%{background:#121213;border-color:#3f4141}50%{background:#4d9947;border-color:#4d9947;transform:rotateX(90deg)}100%{transform:rotateX(0deg);background:#4d9947;border-color:#4d9947}}.wrong{background:#242525;border-color:#242525}.hit{background:#c0a427;border-color:#c0a427}.right{background:#4d9947;border-color:#4d9947}.alert{background:rgba(0,0,0,0.6);backdrop-filter:blur(4px);-webkit-backdrop-filter:blur(4px);padding:20px;max-width:80vw;width:max-content;position:absolute;top:15vh;text-align:center;left:50%;transform:translate(-50%);color:white;border-radius:20px;font-size:24px;animation:alert 1s linear;z-index:15}.share{background:#111;border:solid 1px #222;padding:20px;max-width:85vw;width:max-content;position:absolute;top:40vh;text-align:center;left:50%;transform:translate(-50%, -50%);color:white;border-radius:10px;font-size:24px;animation:slideUp .2s linear;z-index:10}.close{position:absolute;right:20px;top:10px;width:25px;height:25px}.close::before{position:absolute;content:'';display:block;background:#575a5a;width:1px;height:20px;transform:rotate(45deg) translate(10px, -7px)}.close::after{position:absolute;content:'';display:block;background:#575a5a;width:1px;height:20px;transform:rotate(-45deg) translate(7px, 10px)}.emoji{line-height:1.1;letter-spacing:2px}@keyframes alert{0%{opacity:0}10%{opacity:1}90%{opacity:1}100%{opacity:0}}@keyframes slideUp{0%{top:45vh;opacity:0}50%{top:42vh;opacity:.2}100%{top:40vh;opacity:1}}textarea{margin:2vw 3vw;width:25vw;height:85vh}textarea:nth-child(2){margin:2vw 0}.shake{animation:shake .35s linear}@keyframes shake{0%{transform:translate(0, 0)}12.5%{transform:translate(-3%, 0)}37.5%{transform:translate(3%, 0)}62.5%{transform:translate(-3%, 0)}87.5%{transform:translate(3%, 0)}100%{transform:translate(0, 0)}}#emoji{position:fixed;left:-10000px;top:-100000px;width:10px;height:10px}
    </style>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  </head>
  <body>
    {% block body %}{% endblock %}
    <script>
      let word = [];
let history;

let currentWord = [];
let guessCount = 0;
let enterInProgress = false;

let endOfGame = false;

function letter(letter) {
    if (currentWord.length < 5 && !endOfGame && !enterInProgress) {
        currentWord.push(letter);
        show();
    }
}

function show() {
    if (guessCount < 6) {
        let guessRows = document.getElementsByClassName("guessRow");
        let letters = guessRows[guessCount].getElementsByClassName("guessLetter");
        for (let i = 0; i < 5; i++) {
            letters[i].innerText = currentWord[i] ? currentWord[i] : "";
        }
    } else {
        endOfGame = true;
    }
}

function enter() {
    if (!enterInProgress) {
        enterInProgress = true;
        if (currentWord.length == 5) {
            axios.get('/checkWord/' + currentWord.join('')).then(function (response) {
                if (response.data) {
                    let guessRight = true;
                    history.push(currentWord);
                    localStorage.setItem('history', JSON.stringify(history));
                    let guessRows = document.getElementsByClassName("guessRow");
                    let letters = guessRows[guessCount].getElementsByClassName("guessLetter");
                    for (let i in currentWord) {
                        setTimeout(() => {
                            let k = [];
                            for (let j in word) {
                                if (word[j] == currentWord[i]) {
                                    k.push(j);
                                }
                            }
                            if (k.length > 1) {
                                let right = true;
                                for (let j of k) {
                                    if (currentWord[j] != word[j]) {
                                        right = false;
                                    }
                                }
                                if (right && word[i] == letters[i].innerText) {
                                    letters[i].setAttribute('class', "guessLetter right");
                                } else {
                                    letters[i].setAttribute('class', "guessLetter hit");
                                    guessRight = false;
                                }
                            } else if (k.length == 1) {
                                if (k[0] == i) {
                                    letters[i].setAttribute('class', "guessLetter right");
                                } else if (k[0]) {
                                    letters[i].setAttribute('class', "guessLetter hit");
                                    guessRight = false;
                                }
                            } else {
                                letters[i].setAttribute('class', "guessLetter wrong");
                                guessRight = false;
                            }
                        }, i * 200);
                    }
                    setTimeout(() => {
                        guessCount += 1;
                        currentWord = [];
                        keyboard();
                        enterInProgress = false;
                        if (guessRight || guessCount == 6) {
                            endOfGame = true;
                            endScreen();
                        }
                    }, 1500);
                } else {
                    enterInProgress = false;
                    alert_('Բառերի ցանկում այս բառը չկա');
                }
            });
        } else {
            enterInProgress = false;
        }
    }
}
function backspace() {
    if (!enterInProgress) {
        currentWord.pop();
        show();
    }
}

function keyboard() {
    let guesses = document.getElementsByClassName("guesses")[0];
    let wrongs = guesses.getElementsByClassName("wrong");
    let rights = guesses.getElementsByClassName("right");
    let hits = guesses.getElementsByClassName("hit");
    let keys = document.getElementsByClassName("letter");
    for (let i in wrongs) {
        for (let k = 0; k < keys.length; k++) {
            if (wrongs[i].innerText == keys[k].innerText) {
                keys[k].setAttribute('class', "letter wrong");
            }
        }
    }

    for (let i in hits) {
        for (let k = 0; k < keys.length; k++) {
            if (hits[i].innerText == keys[k].innerText) {
                keys[k].setAttribute('class', "letter hit");
            }
        }
    }

    for (let i in rights) {
        for (let k = 0; k < keys.length; k++) {
            if (rights[i].innerText == keys[k].innerText) {
                keys[k].setAttribute('class', "letter right");
            }
        }
    }
}

function alert_(data) {
    let alert = document.createElement('p');
    alert.setAttribute('class', 'alert');
    document.getElementsByClassName('guessRow')[guessCount].setAttribute('class', 'guessRow shake');
    alert.innerText = data;
    document.getElementsByTagName('main')[0].appendChild(alert);
    setTimeout(() => {
        alert.remove();
    }, 1000);
    setTimeout(() => {
        document.getElementsByClassName('guessRow')[guessCount].setAttribute('class', 'guessRow');
    }, 500);
}

function checkAll() {
    let guessRows = document.getElementsByClassName("guessRow");
    for (let r in guessRows) {
        let guessRight = true;
        let letters = guessRows[r].getElementsByClassName("guessLetter");
        if (letters[0].innerText == '') {
            break;
        }
        let currentWord_ = [];
        for (let i in letters) {
            currentWord_.push(letters[i].innerText);
        }
        for (let i in currentWord_) {
            setTimeout(() => {
                let k = [];
                for (let j in word) {
                    if (word[j] == currentWord_[i]) {
                        k.push(j);
                    }
                }
                if (letters[i]) {
                    if (k.length > 1) {
                        let right = true;
                        for (let j of k) {
                            if (currentWord_[j] != word[j]) {
                                right = false;
                            }
                        }
                        if (right && word[i] == letters[i].innerText) {
                            letters[i].setAttribute('class', "guessLetter right");
                        } else {
                            letters[i].setAttribute('class', "guessLetter hit");
                            guessRight = false;
                        }
                    } else if (k.length == 1) {
                        if (k[0] == i) {
                            letters[i].setAttribute('class', "guessLetter right");
                        } else if (k[0]) {
                            letters[i].setAttribute('class', "guessLetter hit");
                            guessRight = false;
                        }
                    } else {
                        letters[i].setAttribute('class', "guessLetter wrong");
                        guessRight = false;
                    }
                }
            }, i * 150 + r * 50);
        }
        setTimeout(() => {
            keyboard();
            if (guessRight || guessCount >= 6) {
                endOfGame = true;
                endScreen();
            }
        }, 1500);
    }
    currentWord = [];
}

function endScreen() {
    let share = document.createElement('div');
    share.setAttribute('class', 'share');
    share.innerHTML = '<span onclick="c()" class="close"></span><p>Այսօրվա բառը։ ' + word.join('') + '</p>';
    let emoji = '';
    let letters = document.getElementsByClassName("guessLetter");
    let count = 0;
    for (let l in letters) {
        if (letters[l].className == 'guessLetter' || letters[l].className == undefined || l > 29) {
            break;
        }
        emoji += letters[l].className == 'guessLetter wrong' ? '⬛' : letters[l].className == 'guessLetter hit' ? '🟨' : '🟩';
        if (l % 5 == 4) {
            emoji += '\n';
            count++;
        }
    }
    emoji = emoji.slice(0, -1);
    emoji = 'Բառուկ ' + wordNumber + ' ' + count + '/6 \n' + emoji;
    share.innerHTML += '<textarea id="emoji">' + emoji + '</textarea> <button class="shareButton" onclick="copyEmoji()">Կիսվել</button>';
    document.getElementsByTagName('main')[0].appendChild(share);
}

function main() {
    for (let i = 0; i < _word.length; i++) {
        if (_word[i + 1] == 'Ւ') {
            word.push(_word[i] + _word[i + 1]);
            i++;
        } else {
            word.push(_word[i]);
        }
    }
    for (let i in word) {
        if (word.indexOf(word[i], parseInt(i) + 1) != -1) {
            document.getElementById("doubleLetter").style.display = "block";
        }
    }
    if (word.join('') != localStorage.getItem('word')) {
        localStorage.setItem('word', _word);
        localStorage.setItem('history', '');
    }
    history = localStorage.getItem('history') ? JSON.parse(localStorage.getItem('history')) : [];
    if (history != []) {
        for (let p in history) {
            currentWord = history[p];
            show();
            guessCount++;
        }
        checkAll();
    }
}

function c() {
    document.getElementsByClassName("share")[0].remove();
}

function copyEmoji() {
    if (navigator.share) {
        async () => { await navigator.share({ text: document.getElementById('emoji').innerText }) }
    } else {
        var emoji = document.getElementById('emoji');
        emoji.focus();
        emoji.select();
        try {
            var successful = document.execCommand('share');
            alert_('Պատճենված');
        } catch (err) {
            alert_('Չստացվեց');
        }
    }
}
    </script>
    <script>
      let _word = "{{word}}";
      let wordNumber = "{{wordNumber}}";
      main();
  </script>
  </body>
</html> #}
